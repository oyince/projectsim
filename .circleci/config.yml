version: 2.1
# Use a package of configuration called an orb.
commands:
   # Exercise - Rollback
   destroy_environment:
     steps:
       - run:
           name: Destroy environment
           when: on_fail
           command: |
             aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}
jobs:
  create_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
              --region us-east-1
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run:
          name: Test job
          command:  return 1
      - destroy_environment  
  #create_infrastructure: 
    #docker:
      #- image: amazon/aws-cli
    #steps:
      #- checkout
      #- run:
          #name: Create Cloudformation Stack
          #command: |
            #aws cloudformation deploy \
              #--template-file template.yml \
              #--stack-name my-simStack
  #configure_infrastructure: 
    #docker:
      #- image: python:3.7-alpine3.11
    #steps:
      #- checkout
      #- add_ssh_keys:
          #fingerprints: ["e3:b3:dd:33:af:1e:15:83:a5:ec:dc:79:e6:f9:4b:52"] # You can get this ID in the section where you registered the SSH Key
      #- run:
          #name: Install dependencies
          #command: |
            # install the dependencies needed for your playbook
            #apk add --update ansible 
      #- run:
          #name: Configure server
          #command: |
            #ansible-playbook -i inventory.txt main2.yml 
    #smoke_test:
      #docker:
        #- image: alpine:latest
      #steps:
        #- run: apk add --update curl
        #- run:
            #name: smoke test
            #command: |
              #URL="https://www.kodekloud-engineer.com/"
              #if curl -s --head ${URL} 
              #then
                #return 0
              #else
                #return 1
              #fi     
   
workflows:
  # Name the workflow
  myWorkflow:
    jobs:
      - create_infrastructure
      #- configure_infrastructure
      - smoke_test
  
